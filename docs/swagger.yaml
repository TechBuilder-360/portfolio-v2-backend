definitions:
  response.SuccessResp:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  types.Authentication:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  types.LoginResponse:
    properties:
      auth:
        $ref: '#/definitions/types.Token'
      has_profile:
        type: boolean
      profile:
        $ref: '#/definitions/types.UserLogin'
    type: object
  types.RegisterResponse:
    properties:
      email:
        type: string
    type: object
  types.Token:
    properties:
      access_token:
        type: string
      life_span:
        type: integer
      refresh_token:
        type: string
    type: object
  types.UserLogin:
    properties:
      bio:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      profession:
        type: string
      profile_pix:
        type: string
      user_name:
        type: string
    type: object
info:
  contact:
    email: techbuilder.circle@gmail.com
    name: Oris API Support
    url: http://www.swagger.io/support
  description: This is oris server api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ORIS API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: login
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Authentication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResp'
            - properties:
                Data:
                  $ref: '#/definitions/types.LoginResponse'
              type: object
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: register
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Authentication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResp'
            - properties:
                Data:
                  $ref: '#/definitions/types.RegisterResponse'
              type: object
      summary: registration
      tags:
      - auth
swagger: "2.0"
